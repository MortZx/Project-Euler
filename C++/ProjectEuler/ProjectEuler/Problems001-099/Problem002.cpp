/*
=================
=   Problem 2   =	Even Fibonacci numbers
==================

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#include "pch.h"
#include "Problems.h"
#include "Utils.h"


/**
 * Iterates through Fibonacci sequence twice
 *
 * @param[in] lim - Upper limit
 */
unsigned int Problem2(unsigned int lim) {
	
	unsigned int a = 1;
	unsigned int b = 2;
	unsigned int next = 0;
	unsigned int total = 0;

	std::vector<uint> vecFib;
	Utils::GetFibonacciSequenceUpTo(lim, vecFib);

	for (size_t i = 0; i < vecFib.size(); i++)
	{
		if (Utils::IsDivisibleBy(vecFib.at(i), 2))
		{
			total += vecFib.at(i);
		}
	}
	return total;
}